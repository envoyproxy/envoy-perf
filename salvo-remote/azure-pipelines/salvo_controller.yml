# Pipeline steps that execute the salvo-remote controller.
parameters:
- name: action
  displayName: "The action to perform, must be one of [preheat, run, cooldown]."
  type: string
  default: ""
- name: usePreviousBuildId
  displayName: "Allows using components built in a previous pipeline execution. If set to an AZP Build ID, Salvo will run with components created in the specified build. Defaults to an empty string in which case Salvo runs with components built by the current pipeline execution."
  type: string
  default: ""

steps:
- ${{ if eq(parameters.action, 'preheat') }}:
  - script: "envoy-perf/salvo-remote/azure-pipelines/scripts/asg_control.sh preheat"
    workingDirectory: "$(Build.SourcesDirectory)"
    displayName: "preheat the salvo-remote ASG"
    env:
      AWS_ACCESS_KEY_ID: $(SalvoAwsAccessKeyId)
      AWS_SECRET_ACCESS_KEY: $(SalvoAwsSecretAccessKey)

- ${{ if eq(parameters.action, 'run') }}:
  - task: DownloadPipelineArtifact@2
    inputs:
      buildType: "current"
      artifactName: "salvo-remote controller and sandboxes"
      targetPath: "$(System.ArtifactsDirectory)"

  - script: "unzip salvo-remote.zip"
    workingDirectory: $(System.ArtifactsDirectory)
    displayName: "unzip salvo-remote"

  - script: "./salvo-remote -build_id_override $(usePreviousBuildId) -build_id $(Build.BuildId)"
    workingDirectory: $(System.ArtifactsDirectory)
    displayName: "Run salvo-remote"

- ${{ if eq(parameters.action, 'cooldown') }}:
  - script: "envoy-perf/salvo-remote/azure-pipelines/scripts/asg_control.sh cooldown"
    workingDirectory: "$(Build.SourcesDirectory)"
    displayName: "preheat the salvo-remote ASG"
    env:
      AWS_ACCESS_KEY_ID: $(SalvoAwsAccessKeyId)
      AWS_SECRET_ACCESS_KEY: $(SalvoAwsSecretAccessKey)
