# Pipeline steps that execute the salvo-remote controller.
parameters:
- name: action
  displayName: "The action to perform"
  type: string
  default: ""

steps:
- ${{ if eq(parameters.action, 'preheat') }}:
  - script: "envoy-perf/salvo-remote/azure-pipelines/scripts/asg_control.sh preheat"
    workingDirectory: "$(Build.SourcesDirectory)"
    displayName: "preheat the salvo-remote ASG"
    env:
      AWS_ACCESS_KEY_ID: $(SalvoAwsAccessKeyId)
      AWS_SECRET_ACCESS_KEY: $(SalvoAwsSecretAccessKey)

- ${{ if eq(parameters.action, 'run') }}:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: $(usePreviousBuildId)
      downloadType: 'single'
      artifactName: 'salvo-remote controller and sandboxes'
      downloadPath: '$(System.ArtifactsDirectory)'

  - bash: |
      echo "ls in System.ArtifactsDirectory:"
      ls -laR "$(System.ArtifactsDirectory)"
    displayName: "ls in System.ArtifactsDirectory"
    condition: always()

  - script: "unzip salvo-remote.zip"
    workingDirectory: $(System.ArtifactsDirectory)
    displayName: "unzip salvo-remote"

  - script: "./salvo-remote -build_id_override $(usePreviousBuildId) -build_id $(Build.BuildId)"
    workingDirectory: $(System.ArtifactsDirectory)
    displayName: "Run salvo-remote"

- ${{ if eq(parameters.action, 'cooldown') }}:
  - script: "envoy-perf/salvo-remote/azure-pipelines/scripts/asg_control.sh preheat"
    workingDirectory: "$(Build.SourcesDirectory)"
    displayName: "preheat the salvo-remote ASG"
    env:
      AWS_ACCESS_KEY_ID: $(SalvoAwsAccessKeyId)
      AWS_SECRET_ACCESS_KEY: $(SalvoAwsSecretAccessKey)
